version: '3'

services:
  app:
    build:
      context: ./app
    working_dir: /opt/server
    env_file:
      - .env
    expose:
      - '3000'
      - '8000'
    restart: always
    depends_on:
      - db
    command: npm run start


  # Контейнер с базой данных
  db:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    environment:
        #MONGO_INITDB_ROOT_USERNAME: admin
        #MONGO_INITDB_ROOT_PASSWORD: 1234
        MONGO_INITDB_DATABASE: sites
    restart: always
    volumes:
      - dbdata:/data/db
      #- ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  # Контейнер с nginx
  nginx:
    container_name: proxy_nginx
    depends_on:
      - app
      - db
      - broker
    image: nginx:latest
    ports:
      - '80:80'
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./static:/var/www/static
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image:  rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
      
  broker:
    container_name: broker
    build: broker/
    working_dir:
      /usr/src/broker
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
    command: npm run start
    restart: always

  parser:
    container_name: parser
    build: parser/
    depends_on:
      - rabbitmq
    restart: always
    command: sh -c '/parser/wait-for-it.sh rabbitmq:5672 --timeout=15 -- python3 /parser/consumer.py'
  
  
volumes:
  dbdata:

networks:
  network: {}